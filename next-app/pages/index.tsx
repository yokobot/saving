import type { NextPage } from "next";
import Head from "next/head";
import React, { useState, createContext, useContext } from "react";
import { Header, MailContainer, HeaderTitle } from "../styles/globals";
import {
  SubContainer,
  MainBlock,
  GraphBlock,
  MainBlockTitle,
  MainBlockScore,
} from "../styles/dashboard";
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
  RadialLinearScale,
  Filler,
} from "chart.js";
import { Line, Radar } from "react-chartjs-2";
import CountUp from "react-countup";
import { SlideMenu, SideMenuContext } from "../components/slidemenu";

ChartJS.register(
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
  RadialLinearScale,
  PointElement,
  LineElement,
  Filler
);

const labels = ["7:00", "8:00", "9:00", "10:00", "11:00", "12:00", "13:00"];

const data = {
  labels,
  datasets: [
    {
      label: "万kw",
      data: [2468, 2623, 2723, 2523, 2823, 3023, 3223],
      borderColor: "rgb(255, 99, 132)",
      backgroundColor: "rgb(255, 99, 132)",
    },
  ],
};

const radicalData = {
  labels: ["10代", "20代", "30代", "40代", "50代", "60代", "70代"],
  datasets: [
    {
      label: "",
      data: [6500, 5900, 9000, 8100, 5600, 5500, 4000],
      fill: true,
      backgroundColor: "rgba(255, 99, 132, 0.2)",
      borderColor: "rgb(255, 99, 132)",
      pointBackgroundColor: "rgb(255, 99, 132)",
      pointBorderColor: "#fff",
      pointHoverBackgroundColor: "#fff",
      pointHoverBorderColor: "rgb(255, 99, 132)",
    },
    {
      label: "",
      data: [2800, 4800, 4000, 1900, 9600, 2700, 10000],
      fill: true,
      backgroundColor: "rgba(54, 162, 235, 0.2)",
      borderColor: "rgb(54, 162, 235)",
      pointBackgroundColor: "rgb(54, 162, 235)",
      pointBorderColor: "#fff",
      pointHoverBackgroundColor: "#fff",
      pointHoverBorderColor: "rgb(54, 162, 235)",
    },
  ],
};

const Context = createContext(
  {} as {
    isOpen: boolean;
    setOpen: React.Dispatch<React.SetStateAction<boolean>>;
  }
);

const Home: NextPage = () => {
  const [isOpen, setOpen] = useState(false);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <SideMenuContext.Provider value={{ isOpen, setOpen }}>
        <SlideMenu />
      </SideMenuContext.Provider>

      <Header>
        <HeaderTitle href="/">Saving</HeaderTitle>
      </Header>

      <MailContainer>
        <SubContainer>
          <MainBlock>
            <MainBlockTitle>東京電力 電気消費量</MainBlockTitle>
            <GraphBlock>
              <Line data={data} />
            </GraphBlock>
          </MainBlock>
          <MainBlock>
            <MainBlockTitle>ピーク時供給力（万kW）</MainBlockTitle>
            <MainBlockScore>
              <CountUp end={4820} duration={2.5} />
            </MainBlockScore>
          </MainBlock>
          <MainBlock>
            <MainBlockTitle>予想最大電力（万kW）</MainBlockTitle>
            <MainBlockScore>
              <CountUp end={4020} duration={2.5} />
            </MainBlockScore>
          </MainBlock>
          <MainBlock>
            <MainBlockTitle>翌日のピーク時供給力（万kW）</MainBlockTitle>
            <MainBlockScore>
              <CountUp end={4620} duration={2.5} />
            </MainBlockScore>
          </MainBlock>
          <MainBlock>
            <MainBlockTitle>翌日の予想最大電力（万kW）</MainBlockTitle>
            <MainBlockScore>
              <CountUp end={3890} duration={2.5} />
            </MainBlockScore>
          </MainBlock>
        </SubContainer>
        <SubContainer>
          <MainBlock>
            <MainBlockTitle>みんなの節電スコア</MainBlockTitle>
            <GraphBlock>
              <Radar data={radicalData} />
            </GraphBlock>
          </MainBlock>
        </SubContainer>
      </MailContainer>
    </>
  );
};

export default Home;
